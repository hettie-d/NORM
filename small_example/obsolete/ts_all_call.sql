 /*					
After the information about hierarchy is stored in the meta tables in the norm_gen schema,
we can proceed with generating user-defined types and functions.
In the plpgsql block below, we call generate_types function which creates types

phone_record
email_record
user_account_record

*/

do $block$
declare v_sql text;
begin
select norm_gen.generate_types('User account') into v_sql;
execute v_sql;
end;
$block$;

/*
The following plplpgsql block does not generate any database objects, 
it is called for the illustrative purposes only.
The output displays the structure of the "transport object" 
*/

do $block$
declare v_sql text;
begin
select norm_gen.nested_root('User account') into v_sql;
raise notice 'SELECT: %' ,v_sql;
end;
$block$;

/*

The next call creates a function norm.account_search_by_id(array[int])
The name of the function is generated from the name of the root object of the hierarchy
The select list is generated by norm_gen.nested_root
*/

select * from norm_gen.generate_select_by_id_function('User account');

/*
Testing that the new function works correctly
*/

select * from norm.account_search_by_ids(array [1,2]);

/*

The next call creates a function norm.account_search_generic (json)
The name of the function is generated from the name of the root object of the hierarchy
The select list is generated by norm_gen.nested_root
The function can process complex search conditions written using MongoDB syntax
More detailes on conditions syntax will be added soon
*/

select norm_gen.generate_search_generic_function('User account');

/*
Testing that the new function works correctly
*/
                
select norm.account_search_generic($${
"phone_type":"cell",
"email_priority":"primary",
"account":{"last_name":"johns",
     "emails":{"email_address":{"$like":"%gmail%"}},
     "dob":{"$gt":"1901-01-01"},
     "phones":{"phone_number":{"$like":"312%"}}
     }
}$$::json);

/*

The next call creates a function norm.account_to_db (json)
The name of the function is generated from the name of the root object of the hierarchy
This function executed all data modifications on the hierarhy
*/

select norm_gen.generate_to_db_function ('User account');

/*
Testing that the new function works correctly
*/

---insert:

select * from norm.account_1_to_db ($$[{
  "username":"johnsmithaccount",
  "first_name":"john",
  "last_name":"smith",
  "dob":"1991-04-01",
   "phones":[{"phone_number":"3123334556", "phone_type_id":"1"}]				
 }]
$$::json)

--update:
select * from norm.account_1_to_db ($$[{
   "account_id":1,
   "username":"aliceacct2"}]
 $$::json
)

--update embedded objects:

select * from norm.account_1_to_db($$[{
   "account_id":"3",
   "emails":[{"email_address":"new.email@hotmail.com", 
                                      "email_priority_id":"1"}]
      }]
     $$::json)

--delete:

select * from norm. account_1_to_db($$[{
   "account_id":"1",
   "phones":[{"phone_id":"2", "command":"delete"}]
   }]
 $$::json)

   